{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/brentg/Desktop/gridgalleryreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/brentg/Desktop/gridgalleryreact/src/App.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(3, 305px);\\n  justify-content: center;\\n  gap: 20px;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    :hover {\\n      opacity: .7;\\n    }\\n  \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 305px;\\n  height 305px;\\n  background: no-repeat center/150% url(/img/\", \".jpeg);\\n  \", \"\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport styled, { css } from 'styled-components';\nimport UserGrid from './Profile/UserGrid'; // This example shows how to render two different screens\n// (or the same screen in a different context) at the same URL,\n// depending on how you got there.\n//\n// Click the \"featured images\" and see them full screen. Then\n// \"visit the gallery\" and click on the colors. Note the URL and\n// the component are the same as before but now we see them\n// inside a modal on top of the gallery screen.\n\nexport default function ModalGalleryExample() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(ModalSwitch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}\n\nfunction ModalSwitch() {\n  let location = useLocation(); // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n\n  let background = location.state && location.state.background;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    location: background || location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    children: React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/gallery\",\n    children: React.createElement(Gallery, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/img/:id\",\n    children: React.createElement(ImageView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), background && React.createElement(Route, {\n    path: \"/img/:id\",\n    children: React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}\n\nconst Image = styled.div(_templateObject(), ({\n  index\n}) => index, ({\n  inModal\n}) => !inModal && css(_templateObject2()));\nconst IMAGES = [{\n  id: 1,\n  title: \"Camera Map\"\n}, {\n  id: 2,\n  title: \"Lens\"\n}, {\n  id: 3,\n  title: \"View Camera\"\n}, {\n  id: 4,\n  title: \"Old Camera\"\n}, {\n  id: 5,\n  title: \"Top View\"\n}, {\n  id: 6,\n  title: \"Yosemite\"\n}, {\n  id: 7,\n  title: \"Nikon Lens\"\n}, {\n  id: 8,\n  title: \"Looking Down\"\n}, {\n  id: 9,\n  title: \"Fuji\"\n}, {\n  id: 10,\n  title: \"Canon\"\n}];\n\nfunction Home() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/gallery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Visit the Gallery\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Featured Images\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/img/2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Tomato\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/img/4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Crimson\"))));\n}\n\nconst PhotoGrid = styled.div(_templateObject3());\n\nfunction Gallery() {\n  let location = useLocation();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(UserGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(PhotoGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, IMAGES.map(i => React.createElement(Link, {\n    key: i.id,\n    to: {\n      pathname: \"/img/\".concat(i.id),\n      // This is the trick! This link sets\n      // the `background` in location state.\n      state: {\n        background: location\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Image, {\n    index: i.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })))));\n}\n\nfunction ImageView() {\n  let _useParams = useParams(),\n      id = _useParams.id;\n\n  let image = IMAGES[parseInt(id, 10) - 1];\n  if (!image) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Image not found\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, image.title), React.createElement(Image, {\n    index: image.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }));\n}\n\nfunction Modal() {\n  let history = useHistory();\n\n  let _useParams2 = useParams(),\n      id = _useParams2.id;\n\n  let image = IMAGES[parseInt(id, 10) - 1];\n  if (!image) return null;\n\n  let back = e => {\n    e.stopPropagation();\n    history.goBack();\n  };\n\n  return React.createElement(\"div\", {\n    onClick: back,\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      background: \"rgba(0, 0, 0, 0.15)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal\",\n    style: {\n      position: \"absolute\",\n      background: \"#fff\",\n      top: 25,\n      left: \"10%\",\n      right: \"10%\",\n      padding: 15,\n      border: \"2px solid #444\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, image.title), React.createElement(Image, {\n    inModal: true,\n    index: image.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: back,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Close\")));\n}","map":{"version":3,"sources":["/Users/brentg/Desktop/gridgalleryreact/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","useHistory","useLocation","useParams","styled","css","UserGrid","ModalGalleryExample","ModalSwitch","location","background","state","Image","div","index","inModal","IMAGES","id","title","Home","PhotoGrid","Gallery","map","i","pathname","ImageView","image","parseInt","color","Modal","history","back","e","stopPropagation","goBack","position","top","left","bottom","right","padding","border"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  useLocation,\n  useParams\n} from \"react-router-dom\";\nimport styled, {css} from 'styled-components';\nimport UserGrid from './Profile/UserGrid';\n\n// This example shows how to render two different screens\n// (or the same screen in a different context) at the same URL,\n// depending on how you got there.\n//\n// Click the \"featured images\" and see them full screen. Then\n// \"visit the gallery\" and click on the colors. Note the URL and\n// the component are the same as before but now we see them\n// inside a modal on top of the gallery screen.\n\nexport default function ModalGalleryExample() {\n  return (\n    <Router>\n      <ModalSwitch />\n    </Router>\n  );\n}\n\nfunction ModalSwitch() {\n  let location = useLocation();\n\n  // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n  let background = location.state && location.state.background;\n\n  return (\n    <div>\n      <Switch location={background || location}>\n        <Route exact path=\"/\" children={<Home />} />\n        <Route path=\"/gallery\" children={<Gallery />} />\n        <Route path=\"/img/:id\" children={<ImageView />} />\n      </Switch>\n\n      {/* Show the modal when a background page is set */}\n      {background && <Route path=\"/img/:id\" children={<Modal />} />}\n    </div>\n  );\n}\n\nconst Image = styled.div`\n  width: 305px;\n  height 305px;\n  background: no-repeat center/150% url(/img/${({index}) => index}.jpeg);\n  ${({inModal}) => !inModal && css`\n    :hover {\n      opacity: .7;\n    }\n  `}\n`\n\nconst IMAGES = [\n  { id: 1, title: \"Camera Map\"},\n  { id: 2, title: \"Lens\"},\n  { id: 3, title: \"View Camera\"},\n  { id: 4, title: \"Old Camera\"},\n  { id: 5, title: \"Top View\"},\n  { id: 6, title: \"Yosemite\"},\n  { id: 7, title: \"Nikon Lens\"},\n  { id: 8, title: \"Looking Down\"},\n  { id: 9, title: \"Fuji\"},\n  { id: 10, title: \"Canon\"}\n];\n\n\nfunction Home() {\n  return (\n    <div>\n      <Link to=\"/gallery\">Visit the Gallery</Link>\n      <h2>Featured Images</h2>\n      <ul>\n        <li>\n          <Link to=\"/img/2\">Tomato</Link>\n        </li>\n        <li>\n          <Link to=\"/img/4\">Crimson</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nconst PhotoGrid = styled.div `\n  display: grid;\n  grid-template-columns: repeat(3, 305px);\n  justify-content: center;\n  gap: 20px;\n`\n\nfunction Gallery() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <UserGrid />\n      <PhotoGrid>\n        {IMAGES.map(i => (\n          <Link\n            key={i.id}\n            to={{\n              pathname: `/img/${i.id}`,\n              // This is the trick! This link sets\n              // the `background` in location state.\n              state: { background: location }\n            }}\n          >\n            <Image index={i.id} />\n          </Link>\n        ))}\n      </PhotoGrid>\n    </div>\n  );\n}\n\nfunction ImageView() {\n  let { id } = useParams();\n  let image = IMAGES[parseInt(id, 10) - 1];\n\n  if (!image) return <div>Image not found</div>;\n\n  return (\n    <div>\n      <h1>{image.title}</h1>\n      <Image index={image.color} />\n    </div>\n  );\n}\n\nfunction Modal() {\n  let history = useHistory();\n  let { id } = useParams();\n  let image = IMAGES[parseInt(id, 10) - 1];\n\n  if (!image) return null;\n\n  let back = e => {\n    e.stopPropagation();\n    history.goBack();\n  };\n\n  return (\n    <div\n      onClick={back}\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        background: \"rgba(0, 0, 0, 0.15)\"\n      }}\n    >\n      <div\n        className=\"modal\"\n        style={{\n          position: \"absolute\",\n          background: \"#fff\",\n          top: 25,\n          left: \"10%\",\n          right: \"10%\",\n          padding: 15,\n          border: \"2px solid #444\"\n        }}\n      >\n        <h1>{image.title}</h1>\n        <Image inModal index={image.id} />\n        <button type=\"button\" onClick={back}>\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}