{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/brentg/Desktop/gridgalleryreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/brentg/Desktop/gridgalleryreact/src/Modal/Modal.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  background: #fff;\\n  top: \", \"px;\\n  left: 10%;\\n  right: 10%;\\n  padding: 15px;\\n  border: 2px solid #444;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  body {\\n    overflow: hidden;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Posts from '../Posts';\nimport { Image } from '../App';\nimport styled, { createGlobalStyle } from 'styled-components';\nconst OverFlowHidden = createGlobalStyle(_templateObject());\nconst ModalStyled = styled.div(_templateObject2(), ({\n  top\n}) => top);\nexport function Modal({\n  match,\n  useParams\n}) {\n  let history = History();\n  let image = Posts[parseInt(id, 10) - 1];\n\n  let _useParams = useParams(),\n      id = _useParams.id;\n\n  if (!image) return null;\n\n  let back = e => {\n    e.stopPropagation();\n    history.goBack();\n  };\n\n  return React.createElement(\"div\", {\n    onClick: back,\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      bottom: 0,\n      height: \"5000px\",\n      right: 0,\n      background: \"rgba(0, 0, 0, 0.8)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(ModalStyled, {\n    top: window.scrollY + window.innerHeight / 2 - 250,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(OverFlowHidden, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, image.title), React.createElement(Image, {\n    inModal: true,\n    index: image.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: back,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Close\")));\n}","map":{"version":3,"sources":["/Users/brentg/Desktop/gridgalleryreact/src/Modal/Modal.js"],"names":["React","Posts","Image","styled","createGlobalStyle","OverFlowHidden","ModalStyled","div","top","Modal","match","useParams","history","History","image","parseInt","id","back","e","stopPropagation","goBack","position","left","bottom","height","right","background","window","scrollY","innerHeight","title"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,KAAR,QAAoB,QAApB;AACA,OAAOC,MAAP,IAAgBC,iBAAhB,QAAwC,mBAAxC;AAEA,MAAMC,cAAc,GAAGD,iBAAH,mBAApB;AAMA,MAAME,WAAW,GAAGH,MAAM,CAACI,GAAV,qBAGR,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAWA,GAHH,CAAjB;AAUA,OAAO,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAqC;AAC1C,MAAIC,OAAO,GAAGC,OAAO,EAArB;AACA,MAAIC,KAAK,GAAGb,KAAK,CAACc,QAAQ,CAACC,EAAD,EAAK,EAAL,CAAR,GAAmB,CAApB,CAAjB;;AAF0C,mBAG7BL,SAAS,EAHoB;AAAA,MAGpCK,EAHoC,cAGpCA,EAHoC;;AAI1C,MAAI,CAACF,KAAL,EAAY,OAAO,IAAP;;AAEZ,MAAIG,IAAI,GAAGC,CAAC,IAAI;AACdA,IAAAA,CAAC,CAACC,eAAF;AACAP,IAAAA,OAAO,CAACQ,MAAR;AACD,GAHD;;AAKA,SACE;AACE,IAAA,OAAO,EAAEH,IADX;AAEE,IAAA,KAAK,EAAE;AACLI,MAAAA,QAAQ,EAAE,UADL;AAELb,MAAAA,GAAG,EAAE,CAFA;AAGLc,MAAAA,IAAI,EAAE,CAHD;AAILC,MAAAA,MAAM,EAAE,CAJH;AAKLC,MAAAA,MAAM,EAAE,QALH;AAMLC,MAAAA,KAAK,EAAE,CANF;AAOLC,MAAAA,UAAU,EAAE;AAPP,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEC,MAAM,CAACC,OAAP,GAAkBD,MAAM,CAACE,WAAP,GAAmB,CAArC,GAA0C,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,KAAK,CAACgB,KAAX,CAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,KAAK,EAAEhB,KAAK,CAACE,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAZF,CADF;AAuBD","sourcesContent":["import React from 'react';\nimport Posts from '../Posts';\nimport {Image} from '../App';\nimport styled, {createGlobalStyle} from 'styled-components';\n\nconst OverFlowHidden = createGlobalStyle`\n  body {\n    overflow: hidden;\n  }\n`\n\nconst ModalStyled = styled.div`\n  position: absolute;\n  background: #fff;\n  top: ${({top}) => top}px;\n  left: 10%;\n  right: 10%;\n  padding: 15px;\n  border: 2px solid #444;\n`\n\nexport function Modal({ match, useParams }) {\n  let history = History();\n  let image = Posts[parseInt(id, 10) - 1];\n  let { id } = useParams();\n  if (!image) return null;\n\n  let back = e => {\n    e.stopPropagation();\n    history.goBack();\n  };\n\n  return (\n    <div\n      onClick={back}\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        height: \"5000px\",\n        right: 0,\n        background: \"rgba(0, 0, 0, 0.8)\"\n      }}\n    >\n      <ModalStyled top={window.scrollY + (window.innerHeight/2) - 250}>\n      <OverFlowHidden />\n        <h1>{image.title}</h1>\n        <Image inModal index={image.id} />\n        <button type=\"button\" onClick={back}>\n          Close\n        </button>\n      </ModalStyled>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}