{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/brentg/Desktop/gridGalleryReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/brentg/Desktop/gridGalleryReact/src/Gallery/Gallery.js\";\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    :hover {\\n      opacity: .7;\\n    }\\n  \"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 305px;\\n  height 305px;\\n  background: no-repeat center/150% url(/img/\", \".jpeg);\\n  \", \"\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  text-decoration: none;\\n  color: #ccc;\\n  text-transform: uppercase;\\n  letter-spacing: 3px;\\n  \", \"\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: auto auto;\\n  justify-content: center;\\n  gap: 30px;\\n  margin-bottom: 20px;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    grid-auto-rows: 200px;\\n  \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(3, 305px);\\n  justify-content: center;\\n  gap: 20px;\\n  \", \"\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport UserGrid from '../Profile/UserGrid';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport Posts from '../Posts';\nconst PhotoGrid = styled.div(_templateObject(), ({\n  cascade\n}) => cascade && css(_templateObject2()));\nconst LinkGrid = styled.div(_templateObject3());\nconst TabLink = styled(Link)(_templateObject4(), ({\n  selected\n}) => selected && 'color: black;');\nexport const Image = styled.div(_templateObject5(), ({\n  index\n}) => index, ({\n  inModal\n}) => !inModal && css(_templateObject6()));\nexport function Gallery({\n  match\n}) {\n  let location = useLocation();\n  const cascade = location.search === '?type=cascade';\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(UserGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(LinkGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TabLink, {\n    selected: !cascade,\n    to: \"\".concat(match),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"square\"), React.createElement(TabLink, {\n    selected: cascade,\n    to: {\n      pathname: \"\".concat(match)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"cascade\")), React.createElement(PhotoGrid, {\n    cascade: cascade,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, Posts.map(i => React.createElement(Link, {\n    key: i.id,\n    to: {\n      pathname: \"/img/\".concat(i.id),\n      // This is the trick! This link sets\n      // the `background` in location state.\n      state: {\n        background: location\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Image, {\n    index: i.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/brentg/Desktop/gridGalleryReact/src/Gallery/Gallery.js"],"names":["React","UserGrid","Link","useLocation","styled","css","Posts","PhotoGrid","div","cascade","LinkGrid","TabLink","selected","Image","index","inModal","Gallery","match","location","search","pathname","map","i","id","state","background"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAGA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAV,oBAKX,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAeA,OAAO,IAAIJ,GAAJ,oBALX,CAAf;AASA,MAAMK,QAAQ,GAAGN,MAAM,CAACI,GAAV,oBAAd;AAQA,MAAMG,OAAO,GAAGP,MAAM,CAACF,IAAD,CAAT,qBAKT,CAAC;AAACU,EAAAA;AAAD,CAAD,KAAgBA,QAAQ,IAAI,eALnB,CAAb;AAQA,OAAO,MAAMC,KAAK,GAAGT,MAAM,CAACI,GAAV,qBAG6B,CAAC;AAACM,EAAAA;AAAD,CAAD,KAAaA,KAH1C,EAId,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe,CAACA,OAAD,IAAYV,GAAZ,oBAJD,CAAX;AAWP,OAAO,SAASW,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA0B;AAC/B,MAAIC,QAAQ,GAAGf,WAAW,EAA1B;AACA,QAAMM,OAAO,GAAGS,QAAQ,CAACC,MAAT,KAAoB,eAApC;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAE,CAACV,OAApB;AAA6B,IAAA,EAAE,YAAKQ,KAAL,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAER,OAAnB;AAA4B,IAAA,EAAE,EAAE;AAACW,MAAAA,QAAQ,YAAIH,KAAJ;AAAT,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CAFF,EAUE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAER,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACe,GAAN,CAAUC,CAAC,IACV,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,CAAC,CAACC,EADT;AAEE,IAAA,EAAE,EAAE;AACFH,MAAAA,QAAQ,iBAAUE,CAAC,CAACC,EAAZ,CADN;AAEF;AACA;AACAC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAEP;AAAd;AAJL,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEI,CAAC,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADD,CADH,CAVF,CADF;AA4BD","sourcesContent":["import React from 'react';\nimport UserGrid from '../Profile/UserGrid';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled, {css} from 'styled-components';\nimport Posts from '../Posts';\n\n\nconst PhotoGrid = styled.div `\n  display: grid;\n  grid-template-columns: repeat(3, 305px);\n  justify-content: center;\n  gap: 20px;\n  ${({cascade}) => cascade && css `\n    grid-auto-rows: 200px;\n  `}\n`\nconst LinkGrid = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  justify-content: center;\n  gap: 30px;\n  margin-bottom: 20px;\n`\n\nconst TabLink = styled(Link)`\n  text-decoration: none;\n  color: #ccc;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  ${({selected}) => selected && 'color: black;'}\n`\n\nexport const Image = styled.div`\n  width: 305px;\n  height 305px;\n  background: no-repeat center/150% url(/img/${({index}) => index}.jpeg);\n  ${({inModal}) => !inModal && css`\n    :hover {\n      opacity: .7;\n    }\n  `}\n`\n\nexport function Gallery({match}) {\n  let location = useLocation();\n  const cascade = location.search === '?type=cascade';\n  return (\n    <div>\n      <UserGrid />\n      <LinkGrid>\n        <TabLink selected={!cascade} to={`${match}`} >\n          square\n        </TabLink>\n        <TabLink selected={cascade} to={{pathname:`${match}`}}>\n          cascade\n        </TabLink>\n      </LinkGrid>\n      <PhotoGrid cascade={cascade}>\n        {Posts.map(i => (\n          <Link\n            key={i.id}\n            to={{\n              pathname: `/img/${i.id}`,\n              // This is the trick! This link sets\n              // the `background` in location state.\n              state: { background: location }\n            }}\n          >\n            <Image index={i.id} />\n          </Link>\n        ))}\n      </PhotoGrid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}